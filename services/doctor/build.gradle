plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'jacoco'

	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'br.com.jtech.services'
version = APP_VERSION

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	maven { url "https://nexus.jtech.com.br/repository/maven-public" }
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencies {
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4"
	compileOnly "org.projectlombok:lombok"
	annotationProcessor "org.projectlombok:lombok"
	implementation "org.springframework.boot:spring-boot-starter-web"
	testImplementation "com.google.code.bean-matchers:bean-matchers:0.14"
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = group
            artifactId = rootProject.name
            version = version
            from components.java
        }
    }
    repositories {
        maven {
            name 'nexus'
            url = 'https://nexus.jtech.com.br/repository/maven-' + (version.endsWith('SNAPSHOT') ? 'snapshots/' : 'releases/')
            credentials {
                username System.getenv("MAVEN_REPO_USER")
                password System.getenv("MAVEN_REPO_PASS")
            }
        }
    }
}
